# методы dup и clone
a = [1, 2, 3]
b = a.clone # dup - тоже самое

c = [1, 2, 3]
d = c.dup

p b
p d

a.push(4) # добавляется только в оригинальную переменную a. В клон / дубликат не добавляется
p a # [1, 2, 3, 4]
p b # [1, 2, 3]

# Методы clone и dup в Ruby создают поверхностные копии объектов, но существуют отличия:
# clone:
# Сохраняет связи между оригинальным объектом и его копией.
# Изменения в одном объекте влияют на другой.

# dup:
# Не сохраняет связи между оригиналом и копией.
# Создает новые экземпляры вложенных объектов.
# Выбор между clone и dup зависит от требуемого поведения в вашем контексте использования.