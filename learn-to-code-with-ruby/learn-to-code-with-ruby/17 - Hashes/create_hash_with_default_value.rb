# создание хэша с дефолтным значением для ключа
numbers = {}
p numbers[:pi] # nil . тк у ключа нет значения

numbers = Hash.new(0) # 
numbers[:pi] = 3.1415
numbers[:birth] = 11

p numbers[:pi]  # 3.1415
p numbers[:birth]  # 3.1415

p numbers[:planet] # выводит 0 , так как в методе new задали дефолтное значение, если ключа нет
p numbers[:colors] # выводит 0 , так как в методе new задали дефолтное значение, если ключа нет





# В Ruby метод new не используется для создания нового хэша. 
# Вместо этого, для создания нового хэша вы можете использовать литерал хэша {} или метод Hash.new. 
# Оба способа эквивалентны:

# Литерал хэша
my_hash = {}

# Метод Hash.new
another_hash = Hash.new
# В обоих случаях вы создаете пустой хэш. Литерал хэша ({}) является более удобным и предпочтительным способом, 
# но Hash.new также может использоваться, например, при создании хэша с начальным значением по умолчанию:

default_hash = Hash.new("default_value")
# Таким образом, new не является методом для хэша напрямую, 
# а используется для создания нового объекта в контексте конкретного класса.

p default_hash[:key1] # выводит "default_value", так как это значение по умолчанию , если нет ключа такого