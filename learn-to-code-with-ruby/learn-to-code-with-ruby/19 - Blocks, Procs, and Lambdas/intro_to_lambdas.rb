# lambdas - a nameless method
# Лямбда в Ruby - это анонимная функция или блок кода, который может быть сохранен в переменной. 
# Она подобна блоку, но имеет строгую семантику в отличие от блока, который более гибок. 
# Лямбда создается с использованием ключевого слова lambda или ->.

# Ключевое отличие лямбды от блока заключается в обработке возвращаемого значения. 
# Лямбда возвращает управление вызывающему коду, в то время как блок возвращает управление из метода, 
# в котором он выполняется.

# Пример лямбды:

my_lambda = lambda { |x, y| x + y }
puts my_lambda.call(2, 3)  # Вывод: 5

# Лямбда также можно создать с использованием ->:
my_lambda = ->(x, y) { x + y }
puts my_lambda.call(2, 3)  # Вывод: 5
# Лямбда полезна в ситуациях, где важна явная обработка возвращаемого значения и где требуется сохранение блока кода 
# для последующего вызова.




squares_proc = Proc.new { |number| number ** 2 }
squares_lambda = lambda { |number| number ** 2 } # lambda очень схожа с Proc
squares_lambda_alternative = ->(number) { number ** 2 }

p [1, 2, 3].map(&squares_proc)
p [1, 2, 3].map(&squares_lambda)
p [1, 2, 3].map(&squares_lambda_alternative)
p [1, 2, 3].map { |number| number ** 2 }